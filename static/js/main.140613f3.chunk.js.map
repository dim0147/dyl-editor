{"version":3,"sources":["core/ffmpeg.ts","utils/Download.ts","Header.tsx","Video.tsx","utils/Time.ts","utils/videoHandle.ts","Render.tsx","Comment.tsx","AudioAction.tsx","VideoAction.tsx","DownloadDesktopApp.tsx","App.tsx","Application.tsx","index.tsx"],"names":["loggerFn","ffmpeg","initFFMPEG","writeLogFn","a","createFFmpeg","logger","corePath","load","fileUrlToArrayBuffer","fileUrl","fetch","then","res","arrayBuffer","buffer","Buffer","from","mergeVideo","srcVideo","srcAudio","args","Error","type","message","Promise","all","result","FS","run","downloadURI","data","fileName","mimeType","blob","url","Blob","document","createElement","href","download","body","appendChild","click","remove","downloadURL","window","URL","createObjectURL","setTimeout","revokeObjectURL","useStyles","makeStyles","headerH1","color","fontWeight","cursor","Header","classes","Grid","item","xs","container","direction","spacing","Box","display","justifyContent","Avatar","alt","src","process","Typography","onClick","open","align","component","className","Button","style","margin","variant","Video","refFn","ref","fluid","width","height","position","memo","hmsToSecondsOnly","hms","split","length","Number","secondToHHMMSS","second","Date","toISOString","substr","editArgs","audioAction","startTrim","endTrim","timeStart","push","timeEnd","renderBox","maxHeight","overflowY","borderBottom","listStyleType","merge","triggerChangeVideo","setCenterMessage","setIsRenderRing","useState","trueLog","setTrueLogs","log","setLog","isRender","setRender","moment","format","useEffect","handleRenderBtn","catch","err","console","inputArgs","editArguments","videoData","m","map","i","disabled","Example","appId","Component","isDashManifestVideo","setAudioAction","React","value","setValue","FormControl","FormLabel","RadioGroup","row","aria-label","name","onChange","event","action","target","FormControlLabel","control","Radio","label","TextMaskCustom","props","inputRef","other","inputElement","mask","placeholderChar","showMask","setTrimTime","isRendering","startLength","setStartLength","endLength","setEndLength","error","setError","flexDirection","Alert","severity","InputLabel","htmlFor","Input","inputComponent","secondStartTime","secondEndTime","theme","createStyles","root","heading","fontSize","typography","pxToRem","fontWeightRegular","SimpleAccordion","Accordion","AccordionSummary","expandIcon","aria-controls","id","AccordionDetails","mb","Link","crossOrigin","App","player","outputFileRef","createRef","state","centerMessage","videoOutput","setState","bool","handleVideoStateChange","currentTime","seek","restartPlayer","setMuted","muted","setPlayer","subscribeToStateChange","srcBlob","srcVideoPreview","playerSourceVideo","displayTrimStatus","Chip","size","icon","clickable","handleUploadFile","files","file","downloadVideo","outputFileName","current","parsed","queryString","parse","location","search","newState","undefined","this","Container","justify","Tooltip","title","IconButton","copy","alert","maxWidth","startIcon","hidden","TextField","defaultValue","placeholder","required","gaId","ReactGA","initialize","pageview","pathname","initGA","Application","Helmet","content","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.140613f3.chunk.js","sourcesContent":["// const { createFFmpeg, fetchFile } = (window as any).FFmpeg;\r\nimport { createFFmpeg, fetchFile } from '@ffmpeg/ffmpeg';\r\nlet ffmpeg: any = null;\r\nlet loggerFn: any;\r\n\r\nexport interface ILogMessage {\r\n    type: string;\r\n    message: string;\r\n}\r\n\r\nexport const initFFMPEG = async (\r\n    writeLogFn: (message: ILogMessage) => void\r\n): Promise<boolean> => {\r\n    ffmpeg = createFFmpeg({\r\n        logger: writeLogFn,\r\n        // corePath: 'https://dim0147.github.io/dyl-editor/ffmpeg/ffmpeg-core.js',\r\n        corePath: 'https://unpkg.com/@ffmpeg/core@0.8.5/dist/ffmpeg-core.js',\r\n    });\r\n    await ffmpeg.load();\r\n    loggerFn = writeLogFn;\r\n    return true;\r\n};\r\n\r\nexport const setLog = (fn: any) => {\r\n    ffmpeg.setLogger((message: any) => {\r\n        fn(message);\r\n    });\r\n};\r\n\r\nfunction fileUrlToArrayBuffer(fileUrl: string): any {\r\n    return fetch(fileUrl)\r\n        .then((res) => res.arrayBuffer())\r\n        .then((buffer) => Buffer.from(buffer));\r\n}\r\n\r\nexport const mergeVideo = async (\r\n    srcVideo: string | null,\r\n    srcAudio: string | null,\r\n    args: Array<string>\r\n): Promise<Uint8Array> => {\r\n    if (ffmpeg === null) throw new Error('FFMPEG not load!');\r\n\r\n    loggerFn({\r\n        type: 'INFO',\r\n        message:\r\n            'Loading Audio And Video File... (it will take long time depend on the duration of video and audio and your internet connection)',\r\n    });\r\n\r\n    if (srcVideo !== null && srcAudio !== null) {\r\n        const result = await Promise.all([\r\n            fileUrlToArrayBuffer(srcVideo),\r\n            fileUrlToArrayBuffer(srcAudio),\r\n        ]);\r\n        ffmpeg.FS('writeFile', 'srcVideo', result[0]);\r\n        ffmpeg.FS('writeFile', 'srcAudio', result[1]);\r\n    } else {\r\n        if (srcVideo !== null)\r\n            // ffmpeg.FS('writeFile', 'srcVideo', await fetchFile(srcVideo));\r\n            ffmpeg.FS(\r\n                'writeFile',\r\n                'srcVideo',\r\n                await fileUrlToArrayBuffer(srcVideo)\r\n            );\r\n        if (srcAudio !== null)\r\n            // ffmpeg.FS('writeFile', 'srcAudio', await fetchFile(srcAudio));\r\n            ffmpeg.FS(\r\n                'writeFile',\r\n                'srcAudio',\r\n                await fileUrlToArrayBuffer(srcAudio)\r\n            );\r\n    }\r\n\r\n    loggerFn({\r\n        type: 'INFO',\r\n        message: 'Start Rendering...',\r\n    });\r\n    await ffmpeg.run(...args, 'output.mp4');\r\n\r\n    return ffmpeg.FS('readFile', 'output.mp4');\r\n};\r\n","export function downloadURI(\r\n    data: Uint8Array,\r\n    fileName: string,\r\n    mimeType: string\r\n) {\r\n    const downloadURL = function (data: any, fileName: any) {\r\n        var a;\r\n        a = document.createElement('a');\r\n        a.href = data;\r\n        a.download = fileName;\r\n        document.body.appendChild(a);\r\n        a.click();\r\n        a.remove();\r\n    };\r\n    var blob: any, url: any;\r\n    blob = new Blob([data], {\r\n        type: mimeType,\r\n    });\r\n    url = window.URL.createObjectURL(blob);\r\n    downloadURL(url, fileName);\r\n    setTimeout(function () {\r\n        return window.URL.revokeObjectURL(url);\r\n    }, 1000);\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Box, Link, Button } from '@material-ui/core';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport logo from './logo512.png';\r\n\r\nconst useStyles = makeStyles({\r\n    headerH1: {\r\n        color: 'blue',\r\n        fontWeight: 'bold',\r\n        '&:hover': {\r\n            color: '#2f17ad',\r\n            cursor: 'pointer',\r\n        },\r\n    },\r\n});\r\n\r\nexport default function Header() {\r\n    const classes = useStyles();\r\n    return (\r\n        <Grid item xs={12}>\r\n            <Grid container direction='column' spacing={2}>\r\n                <Grid item>\r\n                    <Box display='flex' justifyContent='center'>\r\n                        <Avatar alt='DYL Editor' src={`${process.env.PUBLIC_URL}/logo512.png`} />\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Typography\r\n                        onClick={() =>\r\n                            window.open(\r\n                                process.env.REACT_APP_CHROME_STORE,\r\n                                '_blank'\r\n                            )\r\n                        }\r\n                        align='center'\r\n                        component='h1'\r\n                        className={classes.headerH1}\r\n                    >\r\n                        DYL Editor\r\n                    </Typography>\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                    <Box display='flex' justifyContent='center'>\r\n                        <Button\r\n                            onClick={() =>\r\n                                window.open(\r\n                                    'https://dim0147.github.io/dyl-editor/en/update'\r\n                                )\r\n                            }\r\n                            style={{ margin: 10 }}\r\n                            variant='contained'\r\n                            color='secondary'\r\n                        >\r\n                            About Extension\r\n                        </Button>\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n","import React, {memo} from 'react';\r\nimport './video-react.css';\r\n\r\nimport { Player, BigPlayButton } from 'video-react';\r\n\r\nimport { Grid, Box } from '@material-ui/core';\r\n\r\ninterface IProps {\r\n    src: String;\r\n    refFn: (ref: any) => void;\r\n}\r\n\r\n\r\nconst Video = ({ src, refFn }: IProps) => {\r\n    return (\r\n        <Grid item xs={12}>\r\n            <Box display=\"flex\" justifyContent=\"center\">\r\n                <div>\r\n                    <Player ref={refFn} fluid={false} width={400} height={300} src={src}>\r\n                        <BigPlayButton position='center' />\r\n                    </Player>\r\n                </div>\r\n            </Box>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default memo(Video);\r\n","export function hmsToSecondsOnly(hms: string): number | null {\r\n    const a = hms.split(':'); // split it at the colons\r\n\r\n    if (a.length < 3) return null;\r\n\r\n    if (Number(a[1]) >= 60 || Number(a[2]) >= 60) return null;\r\n\r\n    const seconds = +a[0] * 60 * 60 + +a[1] * 60 + +a[2];\r\n    return seconds;\r\n}\r\n\r\n\r\nexport function secondToHHMMSS(second: number): string {\r\n   return new Date(second * 1000).toISOString().substr(11, 8);\r\n}\r\n","import { IProps } from '../Render';\r\n\r\nimport { secondToHHMMSS } from '../utils/Time';\r\n\r\ninterface IEditArgs {\r\n    audioAction: 'add' | 'remove' | 'get' | 'none';\r\n    startTrim?: number;\r\n    endTrim?: number;\r\n}\r\n\r\nexport function editArgs({\r\n    audioAction,\r\n    startTrim,\r\n    endTrim,\r\n}: IEditArgs): Array<string> {\r\n    const args: Array<string> = [];\r\n\r\n    if (typeof startTrim !== 'undefined' && startTrim > 0) {\r\n        const timeStart = secondToHHMMSS(startTrim);\r\n        args.push('-ss', timeStart);\r\n    }\r\n    if (typeof endTrim !== 'undefined' && endTrim > 0) {\r\n        const secondStartTrim = typeof startTrim !== 'undefined' && startTrim > 0 ? startTrim : 0;\r\n        const timeEnd = secondToHHMMSS(endTrim - secondStartTrim);\r\n        args.push('-t', timeEnd);\r\n    }\r\n\r\n    if (audioAction === 'add') args.push('-map', '0', '-map', '1:a');\r\n    else if (audioAction === 'remove') args.push('-an');\r\n\r\n    args.push('-c', 'copy');\r\n\r\n    return args;\r\n}\r\n\r\nexport function mergeArgs(): Array<string> {\r\n    return [\r\n        '-i',\r\n        'srcVideo',\r\n        '-i',\r\n        'srcAudio',\r\n        '-map',\r\n        '0',\r\n        '-map',\r\n        '1:a',\r\n        '-c:v',\r\n        'copy',\r\n    ];\r\n}\r\n","import React, { memo, useState, useEffect } from 'react';\r\nimport moment from 'moment';\r\n\r\nimport './App.css';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Box, Button } from '@material-ui/core';\r\nimport { LocalGroceryStoreTwoTone } from '@material-ui/icons';\r\nimport LocalMoviesIcon from '@material-ui/icons/LocalMovies';\r\n\r\nimport { initFFMPEG, mergeVideo, ILogMessage, setLog } from './core/ffmpeg';\r\nimport { editArgs, mergeArgs } from './utils/videoHandle';\r\n\r\nexport interface IProps {\r\n    setCenterMessage: (message: string) => void;\r\n    setIsRenderRing: (bool: boolean) => void;\r\n    srcVideo?: string;\r\n    srcAudio?: string;\r\n\r\n    merge: boolean;\r\n\r\n    audioAction: 'add' | 'remove' | 'get' | 'none';\r\n\r\n    startTrim?: number;\r\n    endTrim?: number;\r\n\r\n    triggerChangeVideo: (videoData: Uint8Array) => void;\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    renderBox: {\r\n        maxHeight: 250,\r\n        overflowY: 'auto',\r\n        borderBottom: '1px solid #f44336',\r\n        '& ul': {\r\n            color: '#949494',\r\n            listStyleType: 'none',\r\n        },\r\n    },\r\n});\r\n\r\nexport default memo(function Render({\r\n    srcVideo,\r\n    srcAudio,\r\n    merge,\r\n    audioAction,\r\n    startTrim,\r\n    endTrim,\r\n    triggerChangeVideo,\r\n    setCenterMessage,\r\n    setIsRenderRing\r\n}: IProps) {\r\n    const classes = useStyles();\r\n    const [trueLog, setTrueLogs] = useState<Array<string>>([]);\r\n    const [log, setLog] = useState<string>('');\r\n    const [isRender, setRender] = useState<boolean>(false);\r\n\r\n    const writeLogFn = (message: ILogMessage) => {\r\n        setLog(\r\n            `- [${moment().format('LTS')}] ${message.type}: ${message.message}`\r\n        );\r\n    };\r\n\r\n    // Check is merge\r\n    useEffect(() => {\r\n        if (merge) {\r\n            handleRenderBtn();\r\n        }\r\n    }, [merge]);\r\n\r\n    // Check for logs change\r\n    useEffect(() => {\r\n        setTrueLogs([log, ...trueLog]);\r\n    }, [log]);\r\n\r\n    // Start render\r\n    const handleRenderBtn = async () => {\r\n        setRender(true);\r\n        setIsRenderRing(true);\r\n        setCenterMessage('Rendering video, scroll down to see the log...');\r\n        writeLogFn({\r\n            type: 'INFO',\r\n            message: 'Loading ffmpeg...',\r\n        });\r\n\r\n        // Init  MPEG\r\n        const loaded = await initFFMPEG(writeLogFn).catch((err) => {\r\n            console.log(err);\r\n            return null;\r\n        });\r\n        if (loaded !== true) {\r\n            writeLogFn({\r\n                type: 'ERROR',\r\n                message: 'Cannot load ffmpeg',\r\n            });\r\n            setRender(false);\r\n            setIsRenderRing(false);\r\n            setCenterMessage(\r\n                'Cannot load ffmpeg core, scroll down to see the log output the error....'\r\n            );\r\n            return;\r\n        }\r\n\r\n        let args: Array<string> = [];\r\n\r\n        if (merge) {\r\n            args = mergeArgs();\r\n        } else {\r\n            const inputArgs: Array<string> = [];\r\n            if (typeof srcVideo !== 'undefined')\r\n                inputArgs.push('-i', 'srcVideo');\r\n            if (typeof srcAudio !== 'undefined')\r\n                inputArgs.push('-i', 'srcAudio');\r\n            const editArguments: Array<string> = editArgs({\r\n                audioAction,\r\n                startTrim,\r\n                endTrim,\r\n            });\r\n            args = [...inputArgs, ...editArguments];\r\n        }\r\n\r\n        // Start convert video\r\n        const videoData = await mergeVideo(\r\n            srcVideo as string,\r\n            srcAudio as string,\r\n            args\r\n        ).catch((err) => {\r\n            return null;\r\n        });\r\n        if (videoData === null) {\r\n            writeLogFn({\r\n                type: 'ERROR',\r\n                message: 'Cannot convert video!!!',\r\n            });\r\n            setRender(false);\r\n            setIsRenderRing(false);\r\n            setCenterMessage(\r\n                'Error while convert video, scroll down to see the log output the error....'\r\n            );\r\n            return;\r\n        }\r\n        writeLogFn({\r\n            type: 'RESULT',\r\n            message:\r\n                'Convert Video Success, You Can Now Preview Your Video And Start Download!',\r\n        });\r\n        setRender(false);\r\n        setIsRenderRing(false);\r\n        setCenterMessage(\r\n            'Convert video success, click play video below to preview and start download by pressing the button!'\r\n        );\r\n        triggerChangeVideo(videoData);\r\n    };\r\n\r\n    return (\r\n        <Grid item xs={12}>\r\n            <Box m={3} display='flex' justifyContent='center'>\r\n                <Box className={classes.renderBox} display='div'>\r\n                    <ul>\r\n                        {trueLog.map((log, i) => (\r\n                            <li key={i}>{log}</li>\r\n                        ))}\r\n                    </ul>\r\n                </Box>\r\n            </Box>\r\n\r\n            <Box m={3} display='flex' justifyContent='center'>\r\n                <Button\r\n                    disabled={isRender}\r\n                    variant='contained'\r\n                    color='primary'\r\n                    onClick={handleRenderBtn}\r\n                >\r\n                    {isRender ? 'Rendering....' : 'Render'}\r\n                </Button>\r\n            </Box>\r\n        </Grid>\r\n    );\r\n});\r\n","import React, { Component} from 'react';\r\nimport { FacebookProvider, Comments } from 'react-facebook';\r\n \r\nexport default class Example extends Component {\r\n  render() {\r\n    return (\r\n      <FacebookProvider appId=\"243407530453003\">\r\n        <Comments href=\"https://dim0147.github.io/dyl-editor\" />\r\n      </FacebookProvider>\r\n    );\r\n  }\r\n}","import React, { memo, useEffect } from 'react';\r\nimport queryString from 'query-string';\r\n\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\n\r\ninterface IProps {\r\n    isDashManifestVideo: boolean;\r\n    setAudioAction: (action: 'add' | 'remove' | 'none') => void;\r\n}\r\n\r\nexport default memo(function AudioAction({ isDashManifestVideo, setAudioAction }: IProps) {\r\n    const [value, setValue] = React.useState<'add' | 'remove' | 'none'>(isDashManifestVideo ? 'add' : 'none');\r\n\r\n    useEffect(() => {\r\n        if(isDashManifestVideo === true){\r\n            setValue('add');\r\n        }else if(isDashManifestVideo === false){\r\n            setValue('none');\r\n        }\r\n    }, [isDashManifestVideo])\r\n\r\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const action = event.target.value as 'add' | 'remove' | 'none';\r\n        setValue(action);\r\n        setAudioAction(action);\r\n    };\r\n\r\n    return (\r\n        <Grid item xs={12}>\r\n            <Box display='flex' justifyContent='center' m={3}>\r\n                <FormControl component='fieldset'>\r\n                    <Box display='flex' justifyContent='center'>\r\n                        <FormLabel component='legend'>Audio</FormLabel>\r\n                    </Box>\r\n                    <RadioGroup\r\n                        row\r\n                        aria-label='action'\r\n                        name='action'\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                    >\r\n                        <FormControlLabel\r\n                            value='add'\r\n                            control={<Radio />}\r\n                            label='Add'\r\n                        />\r\n                        <FormControlLabel\r\n                            value='remove'\r\n                            control={<Radio />}\r\n                            label='Remove'\r\n                        />\r\n                        <FormControlLabel\r\n                            value='none'\r\n                            control={<Radio />}\r\n                            label='None'\r\n                        />\r\n                    </RadioGroup>\r\n                </FormControl>\r\n            </Box>\r\n        </Grid>\r\n    );\r\n});\r\n","import React, { memo } from 'react';\r\nimport MaskedInput from 'react-text-mask';\r\nimport {\r\n    Grid,\r\n    Box,\r\n    Typography,\r\n    InputLabel,\r\n    Input,\r\n    Button,\r\n} from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nimport { hmsToSecondsOnly } from './utils/Time';\r\n\r\ninterface IProps {\r\n    setTrimTime: (startTrim: number, endTrim: number) => void;\r\n    isRendering: boolean;\r\n}\r\n\r\ninterface TextMaskCustomProps {\r\n    inputRef: (ref: HTMLInputElement | null) => void;\r\n}\r\n\r\nfunction TextMaskCustom(props: TextMaskCustomProps) {\r\n    const { inputRef, ...other } = props;\r\n\r\n    return (\r\n        <MaskedInput\r\n            {...other}\r\n            ref={(ref: any) => {\r\n                inputRef(ref ? ref.inputElement : null);\r\n            }}\r\n            mask={[\r\n                /[0-9]/,\r\n                /[0-9]/,\r\n                ':',\r\n                // ' ',\r\n                /[0-9]/,\r\n                /[0-9]/,\r\n                ':',\r\n                // ' ',\r\n                /[0-9]/,\r\n                /[0-9]/,\r\n            ]}\r\n            placeholderChar={'\\u2000'}\r\n            showMask\r\n        />\r\n    );\r\n}\r\n\r\nexport default memo(function VideoAction({ setTrimTime, isRendering }: IProps) {\r\n    const [startLength, setStartLength] = React.useState<string>('00:00:00');\r\n    const [endLength, setEndLength] = React.useState<string>('00:00:00');\r\n    const [error, setError] = React.useState<string>('');\r\n\r\n    const handleChangeStartLength = (\r\n        event: React.ChangeEvent<HTMLInputElement>\r\n    ) => {\r\n        setStartLength(event.target.value);\r\n    };\r\n\r\n    const handleChangeEndLength = (\r\n        event: React.ChangeEvent<HTMLInputElement>\r\n    ) => {\r\n        setEndLength(event.target.value);\r\n    };\r\n\r\n    const handleApplyBtn = () => {\r\n        // Invalid input\r\n        if (\r\n            startLength !== '00:00:00' &&\r\n            hmsToSecondsOnly(startLength) === null\r\n        ) {\r\n            return setError('Invalid start time!!!');\r\n        }\r\n        if (endLength !== '00:00:00' && hmsToSecondsOnly(endLength) === null) {\r\n            return setError('Invalid end time!!!');\r\n        }\r\n\r\n        const secondStartTime = hmsToSecondsOnly(startLength);\r\n        const secondEndTime = hmsToSecondsOnly(endLength);\r\n\r\n        // Invalid start time and end time\r\n        if (\r\n            secondStartTime !== null &&\r\n            secondEndTime !== null &&\r\n            secondStartTime > 0 &&\r\n            secondEndTime > 0 &&\r\n            secondStartTime >= secondEndTime\r\n        ) {\r\n            return setError('Invalid second start time and end time');\r\n        }\r\n\r\n        setError('');\r\n        setTrimTime(secondStartTime as number, secondEndTime as number);\r\n    };\r\n\r\n    const handleRemoveBtn = () => {\r\n        setStartLength('00:00:00');\r\n        setEndLength('00:00:00');\r\n        setTrimTime(0, 0);\r\n    };\r\n\r\n    return (\r\n        <Grid item xs={12}>\r\n            <Box display='flex' flexDirection='column' justifyContent='center'>\r\n                <Typography align='center' variant='body2'>\r\n                    Trim Video\r\n                </Typography>\r\n\r\n                {error !== '' && (\r\n                    <Box display='flex' justifyContent='center' m={1}>\r\n                        <Alert severity='error'>{error}</Alert>\r\n                    </Box>\r\n                )}\r\n\r\n                <Box display='flex' justifyContent='center' m={1}>\r\n                    <InputLabel\r\n                        style={{ margin: 10 }}\r\n                        htmlFor='formatted-text-mask-input'\r\n                    >\r\n                        Start From\r\n                    </InputLabel>\r\n                    <Input\r\n                        value={startLength}\r\n                        onChange={handleChangeStartLength}\r\n                        inputComponent={TextMaskCustom as any}\r\n                    />\r\n                </Box>\r\n\r\n                <Box display='flex' justifyContent='center' m={1}>\r\n                    <InputLabel\r\n                        style={{ margin: 10 }}\r\n                        htmlFor='formatted-text-mask-input'\r\n                    >\r\n                        End At\r\n                    </InputLabel>\r\n                    <Input\r\n                        value={endLength}\r\n                        onChange={handleChangeEndLength}\r\n                        inputComponent={TextMaskCustom as any}\r\n                    />\r\n                </Box>\r\n\r\n                <Box display='flex' justifyContent='center' m={5}>\r\n                    <Button\r\n                        disabled={isRendering}\r\n                        onClick={handleApplyBtn}\r\n                        variant='outlined'\r\n                        color='secondary'\r\n                        style={{ margin: 3 }}\r\n                    >\r\n                        Apply Trim Video Effect\r\n                    </Button>\r\n\r\n                    <Button\r\n                        disabled={isRendering}\r\n                        onClick={handleRemoveBtn}\r\n                        variant='outlined'\r\n                        color='primary'\r\n                        style={{ margin: 3 }}\r\n                    >\r\n                        Remove Trim Video Effect\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n        </Grid>\r\n    );\r\n});\r\n","import React from 'react';\r\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            width: '100%',\r\n        },\r\n        heading: {\r\n            fontSize: theme.typography.pxToRem(15),\r\n            fontWeight: theme.typography.fontWeightRegular,\r\n        },\r\n    })\r\n);\r\n\r\nexport default function SimpleAccordion() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Accordion>\r\n                <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls='panel1a-content'\r\n                    id='panel1a-header'\r\n                >\r\n                    <Typography className={classes.heading}>\r\n                        <GetAppIcon /> Download DYL Editor App (Windows Only)\r\n                    </Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    <Grid container>\r\n                        <Grid item xs={12}>\r\n                            <Box display='flex' justifyContent='center' mb={3}>\r\n                                <Link\r\n                                    href='https://github.com/dim0147/DYLEditorApplication/releases/'\r\n                                    target='_blank'\r\n                                >\r\n                                    <GetAppIcon /> Download DYL Editor App\r\n                                </Link>\r\n                            </Box>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                        <Typography>\r\n                                - This app is desktop application.\r\n                            </Typography>\r\n                            <Typography>\r\n                                - This app is under DYL Download Facebook Video\r\n                                extension on chrome store.\r\n                            </Typography>\r\n                            <Typography>\r\n                                - This will help you render video with duration\r\n                                bigger than 1 hour.\r\n                            </Typography>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Typography>\r\n                                - Click download and goto the download page,\r\n                                click on 'DYL_setup.exe' and download the file:\r\n                            </Typography>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Box display='flex' justifyContent='center' mb={3}>\r\n                                <img\r\n                                    src={`${process.env.PUBLIC_URL}/images/AppDesktop/1.jpeg`}\r\n                                    alt=''\r\n                                    width='100%'\r\n                                    height='auto'\r\n                                    crossOrigin='anonymous'\r\n                                />\r\n                            </Box>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Typography>\r\n                                - In some browser, it will show some message\r\n                                that said this file is virus, ignore it:\r\n                            </Typography>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Box display='flex' justifyContent='center' mb={3}>\r\n                                <img\r\n                                    src={`${process.env.PUBLIC_URL}/images/AppDesktop/2.png`}\r\n                                    alt=''\r\n                                    width='100%'\r\n                                    height='auto'\r\n                                    crossOrigin='anonymous'\r\n                                />\r\n                            </Box>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Typography>\r\n                                - Open and install the setup, it will display a\r\n                                screen like this notify you prevent install\r\n                                unknown app, skip it:\r\n                            </Typography>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Box display='flex' justifyContent='center' mb={3}>\r\n                                <img\r\n                                    src={`${process.env.PUBLIC_URL}/images/AppDesktop/3.png`}\r\n                                    alt=''\r\n                                    width='100%'\r\n                                    height='auto'\r\n                                    crossOrigin='anonymous'\r\n                                />\r\n                            </Box>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Box display='flex' justifyContent='center' mb={3}>\r\n                                <img\r\n                                    src={`${process.env.PUBLIC_URL}/images/AppDesktop/4.png`}\r\n                                    alt=''\r\n                                    width='100%'\r\n                                    height='auto'\r\n                                    crossOrigin='anonymous'\r\n                                />\r\n                            </Box>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Typography>\r\n                                - Run the setup and install, after install\r\n                                success run the application:\r\n                            </Typography>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Box display='flex' justifyContent='center' mb={3}>\r\n                                <img\r\n                                    src={`${process.env.PUBLIC_URL}/images/AppDesktop/5.png`}\r\n                                    alt=''\r\n                                    width='100%'\r\n                                    height='auto'\r\n                                    crossOrigin='anonymous'\r\n                                />\r\n                            </Box>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Typography>\r\n                                - The app will be like this:\r\n                            </Typography>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Box display='flex' justifyContent='center' mb={3}>\r\n                                <img\r\n                                    src={`${process.env.PUBLIC_URL}/images/AppDesktop/6.png`}\r\n                                    alt=''\r\n                                    width='100%'\r\n                                    height='auto'\r\n                                    crossOrigin='anonymous'\r\n                                />\r\n                            </Box>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Typography>\r\n                                - Back to web page, copy DYL Editor URL From\r\n                                Web:\r\n                            </Typography>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Box display='flex' justifyContent='center' mb={3}>\r\n                                <img\r\n                                    src={`${process.env.PUBLIC_URL}/images/AppDesktop/7.png`}\r\n                                    alt=''\r\n                                    width='100%'\r\n                                    height='auto'\r\n                                    crossOrigin='anonymous'\r\n                                />\r\n                            </Box>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Typography>\r\n                                - Paste DYL Editor URL From Web To App:\r\n                            </Typography>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Box display='flex' justifyContent='center' mb={3}>\r\n                                <img\r\n                                    src={`${process.env.PUBLIC_URL}/images/AppDesktop/8.png`}\r\n                                    alt=''\r\n                                    width='100%'\r\n                                    height='auto'\r\n                                    crossOrigin='anonymous'\r\n                                />\r\n                            </Box>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Typography>\r\n                                - Name the file you want when render success and\r\n                                press 'START' button it will start download\r\n                                video and audio then render the video, NOTE: if\r\n                                the file render exist already it will ask you\r\n                                choose another name:\r\n                            </Typography>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Box display='flex' justifyContent='center' mb={3}>\r\n                                <img\r\n                                    src={`${process.env.PUBLIC_URL}/images/AppDesktop/9.png`}\r\n                                    alt=''\r\n                                    width='100%'\r\n                                    height='auto'\r\n                                    crossOrigin='anonymous'\r\n                                />\r\n                            </Box>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Typography>\r\n                                - Virus checking result by Virus Total:{' '}\r\n                                <Link\r\n                                    href='                 \r\n                        https://www.virustotal.com/gui/file/4b8e8ce1875c4eab944b3b7b8dc1b3e3ef3e4996fa0670587bb12855000bec50/detection\r\n\r\n'\r\n                                    target='_blank'\r\n                                >\r\n                                    Virus Total\r\n                                </Link>\r\n                            </Typography>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}></Grid>\r\n                    </Grid>\r\n                </AccordionDetails>\r\n            </Accordion>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport queryString from 'query-string';\r\nimport copy from 'copy-to-clipboard';\r\n\r\nimport { downloadURI } from './utils/Download';\r\n\r\nimport {\r\n    Container,\r\n    Grid,\r\n    Typography,\r\n    Button,\r\n    Box,\r\n    Chip,\r\n    TextField,\r\n    IconButton,\r\n    Tooltip,\r\n} from '@material-ui/core';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport VideoCallIcon from '@material-ui/icons/VideoCall';\r\n\r\nimport Header from './Header';\r\n\r\nimport Video from './Video';\r\nimport Render from './Render';\r\n\r\nimport Comment from './Comment';\r\n\r\nimport AudioAction from './AudioAction';\r\nimport VideoAction from './VideoAction';\r\n\r\nimport DownloadDesktopApp from './DownloadDesktopApp';\r\n\r\ninterface IQueryParameter {\r\n    srcAudio?: string;\r\n    srcVideo?: string;\r\n    merge?: boolean;\r\n    isDashManifestVideo: boolean;\r\n}\r\n\r\ninterface IState {\r\n    centerMessage: string;\r\n    isRendering: boolean;\r\n\r\n    srcVideo?: string;\r\n    srcAudio?: string;\r\n    isDashManifestVideo: boolean;\r\n\r\n    merge: boolean;\r\n\r\n    currentTimeVideo?: any;\r\n\r\n    audioAction: 'add' | 'remove' | 'none';\r\n    startTrim?: number;\r\n    endTrim?: number;\r\n\r\n    srcVideoPreview?: string;\r\n    videoOutput: Uint8Array | null;\r\n}\r\n\r\nexport default class App extends React.Component<{}, IState> {\r\n    public player: any = null;\r\n\r\n    private outputFileRef: any = React.createRef();\r\n\r\n    state: Readonly<IState> = {\r\n        centerMessage: '',\r\n        merge: false,\r\n        isRendering: false,\r\n        isDashManifestVideo: false,\r\n        audioAction: 'none',\r\n        videoOutput: null,\r\n    };\r\n\r\n    componentDidMount() {\r\n        const parsed: any = queryString.parse((window as any).location.search);\r\n        let newState: any = {};\r\n        if (typeof (parsed as IQueryParameter).srcVideo !== undefined) {\r\n            newState['srcVideo'] = parsed.srcVideo;\r\n        }\r\n        if (typeof (parsed as IQueryParameter).srcAudio !== undefined) {\r\n            newState['srcAudio'] = parsed.srcAudio;\r\n        }\r\n        if (typeof parsed.isDashManifestVideo !== undefined) {\r\n            newState['isDashManifestVideo'] =\r\n                parsed.isDashManifestVideo === 'true' ? true : false;\r\n        }\r\n        if (typeof (parsed as IQueryParameter).merge !== undefined) {\r\n            newState['merge'] = parsed.merge;\r\n        }\r\n\r\n        this.setState(newState);\r\n    }\r\n\r\n    setCenterMessage = (message: string) => {\r\n        this.setState({ centerMessage: message });\r\n    };\r\n\r\n    setIsRenderRing = (bool: boolean) => {\r\n        this.setState({ isRendering: bool });\r\n    };\r\n\r\n    handleVideoStateChange = (state: any) => {\r\n        if (this.player === null) return;\r\n        const currentTime: number = state.currentTime as number;\r\n        const { startTrim, endTrim } = this.state;\r\n        if (\r\n            typeof startTrim !== 'undefined' &&\r\n            startTrim > 0 &&\r\n            currentTime < startTrim\r\n        ) {\r\n            this.player.seek(startTrim);\r\n            return;\r\n        }\r\n        if (\r\n            typeof endTrim !== 'undefined' &&\r\n            endTrim > 0 &&\r\n            currentTime > endTrim\r\n        ) {\r\n            this.player.seek(startTrim);\r\n            return;\r\n        }\r\n    };\r\n\r\n    restartPlayer = () => {\r\n        this.setMuted(false);\r\n        this.setTrimTime(0, 0);\r\n    };\r\n\r\n    setMuted = (muted: boolean) => {\r\n        if (this.player !== null) {\r\n            this.player.muted = muted;\r\n        }\r\n    };\r\n\r\n    setAudioAction = (action: 'add' | 'remove' | 'none') => {\r\n        if (action === 'remove') {\r\n            this.player.muted = true;\r\n        } else if (action === 'add') {\r\n            this.player.muted = false;\r\n        } else if (action === 'none') {\r\n            this.player.muted = false;\r\n        }\r\n        this.setState({ audioAction: action });\r\n    };\r\n\r\n    setTrimTime = (startTrim: number, endTrim: number) => {\r\n        this.setState({\r\n            startTrim,\r\n            endTrim,\r\n        });\r\n    };\r\n\r\n    // Ref player react library\r\n    setPlayer = (player: any) => {\r\n        this.player = player;\r\n        if (this.player !== null) {\r\n            this.player.subscribeToStateChange(this.handleVideoStateChange);\r\n        }\r\n    };\r\n\r\n    // When convert success\r\n    triggerChangeVideo = (videoData: Uint8Array) => {\r\n        var srcBlob = URL.createObjectURL(new Blob([videoData.buffer]));\r\n        this.setState({ srcVideoPreview: srcBlob, videoOutput: videoData });\r\n        this.restartPlayer();\r\n    };\r\n\r\n    // Choose source video to display\r\n    playerSourceVideo = (): string | null => {\r\n        // Priority video preview as first\r\n        if (typeof this.state.srcVideoPreview !== 'undefined')\r\n            return this.state.srcVideoPreview as string;\r\n\r\n        // Source video second\r\n        if (typeof this.state.srcVideo !== 'undefined') {\r\n            return this.state.srcVideo as string;\r\n        }\r\n\r\n        // Source Audio third\r\n        if (typeof this.state.srcAudio !== 'undefined') {\r\n            return this.state.srcAudio as string;\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    displayTrimStatus = () => {\r\n        if (\r\n            (typeof this.state.startTrim !== 'undefined' &&\r\n                this.state.startTrim > 0) ||\r\n            (typeof this.state.endTrim !== 'undefined' &&\r\n                this.state.endTrim > 0)\r\n        )\r\n            return (\r\n                <Grid item>\r\n                    <Chip\r\n                        size='small'\r\n                        icon={<DoneIcon />}\r\n                        label='Apply trim video'\r\n                        clickable={false}\r\n                        color='secondary'\r\n                    />\r\n                </Grid>\r\n            );\r\n    };\r\n\r\n    handleUploadFile = async (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const files = event.target.files;\r\n        if (files === null || files.length > 1) return;\r\n\r\n        const file = files.item(0);\r\n        const url = URL.createObjectURL(file);\r\n        this.setState({ srcVideo: url });\r\n    };\r\n\r\n    downloadVideo = () => {\r\n        let outputFileName = this.outputFileRef.current.value as string;\r\n        if (outputFileName === '') outputFileName = 'Video-DYL';\r\n        downloadURI(\r\n            this.state.videoOutput as Uint8Array,\r\n            outputFileName + '.mp4',\r\n            'application/octet-stream'\r\n        );\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Grid container justify='center'>\r\n                    <Header />\r\n\r\n                    {/* Alert 2GB Maximum */}\r\n                    <Grid item xs={12}>\r\n                        <Box m={2} display='flex' justifyContent='center'>\r\n                            <Alert severity='warning'>\r\n                                - Currently can handle video maximum 2 GB (1\r\n                                hour video and below), video have more than one\r\n                                hour see 'Download DYL Editor App(Windows Only)' or scroll down the webpage to read the\r\n                                comment!\r\n                                <br />- Hiện tại có thể xử lý video tối đa 2 GB\r\n                                (video 1 giờ trở xuống), video có hơn một giờ\r\n                                xem 'Download DYL Editor App(Windows Only)' hoặc cuộn xuống trang web để đọc bình luận!\r\n                            </Alert>\r\n                        </Box>\r\n                    </Grid>\r\n\r\n                    <Grid>\r\n                        <Box display='flex' flexDirection='row'>\r\n                            <Tooltip title='Copy this URL and paste to DYL Editor App'>\r\n                                <IconButton\r\n                                    onClick={() => {\r\n                                        copy(window.location.href);\r\n                                        alert('Copy success');\r\n                                    }}\r\n                                >\r\n                                    <FileCopyIcon />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n\r\n                            <Alert\r\n                                color='success'\r\n                                icon={false}\r\n                                style={{ maxWidth: 300 }}\r\n                            >\r\n                                <Typography>{window.location.href.substr(0, 30)}...</Typography>\r\n                            </Alert>\r\n                        </Box>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                        <DownloadDesktopApp />\r\n                    </Grid>\r\n\r\n                    {/* Info */}\r\n                    {this.state.centerMessage.length > 0 && (\r\n                        <Grid item xs={12}>\r\n                            <Box m={2} display='flex' justifyContent='center'>\r\n                                <Alert severity='info'>\r\n                                    {this.state.centerMessage}\r\n                                </Alert>\r\n                            </Box>\r\n                        </Grid>\r\n                    )}\r\n\r\n                    {/* Preview video */}\r\n                    {this.state.videoOutput !== null && (\r\n                        <Grid item xs={12}>\r\n                            <Box m={2}>\r\n                                <Typography\r\n                                    color='secondary'\r\n                                    align='center'\r\n                                    display='block'\r\n                                    variant='subtitle1'\r\n                                >\r\n                                    Preview Your Video\r\n                                </Typography>\r\n                            </Box>\r\n                        </Grid>\r\n                    )}\r\n\r\n                    {/* No video or audio file asking add file */}\r\n                    {typeof this.state.srcVideo === 'undefined' &&\r\n                        typeof this.state.srcAudio === 'undefined' && (\r\n                            <Grid item xs={12}>\r\n                                <Box\r\n                                    m={2}\r\n                                    display='flex'\r\n                                    justifyContent='center'\r\n                                >\r\n                                    <Button\r\n                                        variant='contained'\r\n                                        component='label'\r\n                                        color='primary'\r\n                                        startIcon={<VideoCallIcon />}\r\n                                    >\r\n                                        Upload Media\r\n                                        <input\r\n                                            type='file'\r\n                                            hidden\r\n                                            onChange={this.handleUploadFile}\r\n                                        />\r\n                                    </Button>\r\n                                </Box>\r\n                            </Grid>\r\n                        )}\r\n\r\n                    {this.playerSourceVideo() !== null && (\r\n                        <Video\r\n                            refFn={this.setPlayer}\r\n                            src={this.playerSourceVideo() as string}\r\n                        />\r\n                    )}\r\n\r\n                    {this.state.videoOutput !== null && (\r\n                        <Grid item>\r\n                            <Box display='flex' justifyContent='center' m={2}>\r\n                                <TextField\r\n                                    inputRef={this.outputFileRef}\r\n                                    label='Name File'\r\n                                    defaultValue='Video-DYL'\r\n                                    placeholder='Enter Your File Name'\r\n                                    required\r\n                                />\r\n                            </Box>\r\n                            <Box display='flex' justifyContent='center' m={3}>\r\n                                <Button\r\n                                    startIcon={<CloudDownloadIcon />}\r\n                                    variant='contained'\r\n                                    color='secondary'\r\n                                    onClick={this.downloadVideo}\r\n                                >\r\n                                    Download\r\n                                </Button>\r\n                            </Box>\r\n                        </Grid>\r\n                    )}\r\n                    <AudioAction\r\n                        isDashManifestVideo={this.state.isDashManifestVideo}\r\n                        setAudioAction={this.setAudioAction}\r\n                    />\r\n                    <VideoAction\r\n                        isRendering={this.state.isRendering}\r\n                        setTrimTime={this.setTrimTime}\r\n                    />\r\n\r\n                    {this.displayTrimStatus()}\r\n\r\n                    <Render\r\n                        setIsRenderRing={this.setIsRenderRing}\r\n                        setCenterMessage={this.setCenterMessage}\r\n                        merge={this.state.merge}\r\n                        srcVideo={this.state.srcVideo}\r\n                        srcAudio={this.state.srcAudio}\r\n                        audioAction={this.state.audioAction}\r\n                        startTrim={this.state.startTrim}\r\n                        endTrim={this.state.endTrim}\r\n                        triggerChangeVideo={this.triggerChangeVideo}\r\n                    />\r\n\r\n                    <Grid item>\r\n                        <Box display='flex' justifyContent='center'>\r\n                            <Comment />\r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactGA from 'react-ga';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nfunction initGA(): void {\r\n    const gaId = process.env.REACT_APP_GOOGLE_ANALYTIC_ID;\r\n    if (typeof gaId !== 'undefined') {\r\n        ReactGA.initialize(gaId);\r\n        ReactGA.pageview(window.location.pathname + window.location.search);\r\n    }\r\n}\r\n\r\ninitGA();\r\n\r\nexport default class Application extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className='application'>\r\n                <Helmet>\r\n                    <title>DYL Editor</title>\r\n                    <meta\r\n                        name='title'\r\n                        content='DYL Editor - Edit Video And Audio'\r\n                    />\r\n                    <meta\r\n                        name='description'\r\n                        content='DYL Editor is a photo and video editing website under DYL Download Facebook Video Extension'\r\n                    />\r\n                </Helmet>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport Application from './Application';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Application />\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}