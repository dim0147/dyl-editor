{"version":3,"sources":["utils/Download.ts","logo512.png","Header.tsx","core/ffmpeg.ts","Video.tsx","utils/Time.ts","utils/videoHandle.ts","Render.tsx","Comment.tsx","AudioAction.tsx","VideoAction.tsx","App.tsx","Application.tsx","index.tsx"],"names":["downloadURI","data","fileName","mimeType","blob","url","Blob","type","a","document","createElement","href","download","body","appendChild","click","remove","downloadURL","window","URL","createObjectURL","setTimeout","revokeObjectURL","useStyles","makeStyles","headerH1","color","fontWeight","cursor","Header","classes","Grid","item","xs","container","direction","spacing","Box","display","justifyContent","Avatar","alt","src","logo","Typography","onClick","open","process","align","component","className","Button","style","margin","variant","loggerFn","Video","refFn","ref","fluid","width","height","position","memo","FFmpeg","createFFmpeg","fetchFile","ffmpeg","initFFMPEG","writeLogFn","logger","corePath","load","mergeVideo","srcVideo","srcAudio","args","Error","message","FS","run","hmsToSecondsOnly","hms","split","length","Number","secondToHHMMSS","second","Date","toISOString","substr","editArgs","audioAction","startTrim","endTrim","timeStart","push","timeEnd","renderBox","maxHeight","overflowY","borderBottom","listStyleType","merge","triggerChangeVideo","setCenterMessage","useState","trueLog","setTrueLogs","log","setLog","isRender","setRender","moment","format","useEffect","handleRenderBtn","catch","err","inputArgs","editArguments","videoData","m","map","i","disabled","Example","appId","Component","isDashManifestVideo","setAudioAction","React","value","setValue","FormControl","FormLabel","RadioGroup","row","aria-label","name","onChange","event","action","target","FormControlLabel","control","Radio","label","TextMaskCustom","props","inputRef","other","inputElement","mask","placeholderChar","showMask","setTrimTime","startLength","setStartLength","endLength","setEndLength","error","setError","flexDirection","Alert","severity","InputLabel","htmlFor","Input","inputComponent","secondStartTime","secondEndTime","App","player","outputFileRef","createRef","state","centerMessage","videoOutput","setState","handleVideoStateChange","currentTime","seek","restartPlayer","setMuted","muted","setPlayer","subscribeToStateChange","srcBlob","buffer","srcVideoPreview","playerSourceVideo","displayTrimStatus","Chip","size","icon","clickable","handleUploadFile","files","file","downloadVideo","outputFileName","current","parsed","queryString","parse","location","search","newState","undefined","this","Container","justify","startIcon","hidden","TextField","defaultValue","placeholder","required","gaId","ReactGA","initialize","pageview","pathname","initGA","Application","Helmet","content","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2cccf2a7.chunk.js","sourcesContent":["export function downloadURI(\r\n    data: Uint8Array,\r\n    fileName: string,\r\n    mimeType: string\r\n) {\r\n    const downloadURL = function (data: any, fileName: any) {\r\n        var a;\r\n        a = document.createElement('a');\r\n        a.href = data;\r\n        a.download = fileName;\r\n        document.body.appendChild(a);\r\n        a.click();\r\n        a.remove();\r\n    };\r\n    var blob: any, url: any;\r\n    blob = new Blob([data], {\r\n        type: mimeType,\r\n    });\r\n    url = window.URL.createObjectURL(blob);\r\n    downloadURL(url, fileName);\r\n    setTimeout(function () {\r\n        return window.URL.revokeObjectURL(url);\r\n    }, 1000);\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo512.c49869f0.png\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Box, Link, Button } from '@material-ui/core';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport logo from './logo512.png';\r\n\r\nconst useStyles = makeStyles({\r\n    headerH1: {\r\n        color: 'blue',\r\n        fontWeight: 'bold',\r\n        '&:hover': {\r\n            color: '#2f17ad',\r\n            cursor: 'pointer',\r\n        },\r\n    },\r\n});\r\n\r\nexport default function Header() {\r\n    const classes = useStyles();\r\n    return (\r\n        <Grid item xs={12}>\r\n            <Grid container direction='column' spacing={2}>\r\n                <Grid item>\r\n                    <Box display='flex' justifyContent='center'>\r\n                        <Avatar alt='DYL Editor' src={logo} />\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Typography\r\n                        onClick={() =>\r\n                            window.open(\r\n                                process.env.REACT_APP_CHROME_STORE,\r\n                                '_blank'\r\n                            )\r\n                        }\r\n                        align='center'\r\n                        component='h1'\r\n                        className={classes.headerH1}\r\n                    >\r\n                        DYL Editor\r\n                    </Typography>\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                    <Box display='flex' justifyContent='center'>\r\n                        <Button\r\n                            onClick={() =>\r\n                                window.open(\r\n                                    'https://dim0147.github.io/dyl-editor/en/update'\r\n                                )\r\n                            }\r\n                            style={{ margin: 10 }}\r\n                            variant='contained'\r\n                            color='secondary'\r\n                        >\r\n                            About Extension\r\n                        </Button>\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n","const { createFFmpeg, fetchFile } = (window as any).FFmpeg;\r\nlet ffmpeg: any = null;\r\nlet loggerFn: any;\r\n\r\nexport interface ILogMessage {\r\n    type: string;\r\n    message: string;\r\n}\r\n\r\nexport const initFFMPEG = async (\r\n    writeLogFn: (message: ILogMessage) => void\r\n): Promise<boolean> => {\r\n    ffmpeg = createFFmpeg({\r\n        logger: writeLogFn,\r\n        // corePath: '/vendor/ffmpeg-core.js',\r\n        corePath: 'https://unpkg.com/@ffmpeg/core@0.8.5/dist/ffmpeg-core.js',\r\n    });\r\n    await ffmpeg.load();\r\n    loggerFn = writeLogFn;\r\n    return true;\r\n};\r\n\r\nexport const setLog = (fn: any) => {\r\n    ffmpeg.setLogger((message: any) => {\r\n        fn(message);\r\n    });\r\n};\r\n\r\nexport const mergeVideo = async (\r\n    srcVideo: string | null,\r\n    srcAudio: string | null,\r\n    args: Array<string>\r\n): Promise<Uint8Array> => {\r\n    if (ffmpeg === null) throw new Error('FFMPEG not load!');\r\n\r\n    loggerFn({\r\n        type: 'INFO',\r\n        message: 'Loading Audio And Video File...',\r\n    });\r\n    if (srcVideo !== null)\r\n        ffmpeg.FS('writeFile', 'srcVideo', await fetchFile(srcVideo));\r\n    if (srcAudio !== null)\r\n        ffmpeg.FS('writeFile', 'srcAudio', await fetchFile(srcAudio));\r\n    loggerFn({\r\n        type: 'INFO',\r\n        message: 'Start Rendering...',\r\n    });\r\n    await ffmpeg.run(...args, 'output.mp4');\r\n\r\n    return ffmpeg.FS('readFile', 'output.mp4');\r\n};\r\n","import React, {memo} from 'react';\r\nimport './video-react.css';\r\n\r\nimport { Player, BigPlayButton } from 'video-react';\r\n\r\nimport { Grid, Box } from '@material-ui/core';\r\n\r\ninterface IProps {\r\n    src: String;\r\n    refFn: (ref: any) => void;\r\n}\r\n\r\n\r\nconst Video = ({ src, refFn }: IProps) => {\r\n    return (\r\n        <Grid item xs={12}>\r\n            <Box display=\"flex\" justifyContent=\"center\">\r\n                <div>\r\n                    <Player ref={refFn} fluid={false} width={400} height={300} src={src}>\r\n                        <BigPlayButton position='center' />\r\n                    </Player>\r\n                </div>\r\n            </Box>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default memo(Video);\r\n","export function hmsToSecondsOnly(hms: string): number | null {\r\n    const a = hms.split(':'); // split it at the colons\r\n\r\n    if (a.length < 3) return null;\r\n\r\n    if (Number(a[1]) >= 60 || Number(a[2]) >= 60) return null;\r\n\r\n    const seconds = +a[0] * 60 * 60 + +a[1] * 60 + +a[2];\r\n    return seconds;\r\n}\r\n\r\n\r\nexport function secondToHHMMSS(second: number): string {\r\n   return new Date(second * 1000).toISOString().substr(11, 8);\r\n}\r\n","import { IProps } from '../Render';\r\n\r\nimport { secondToHHMMSS } from '../utils/Time';\r\n\r\ninterface IEditArgs {\r\n    audioAction: 'add' | 'remove' | 'get' | 'none';\r\n    startTrim?: number;\r\n    endTrim?: number;\r\n}\r\n\r\nexport function editArgs({\r\n    audioAction,\r\n    startTrim,\r\n    endTrim,\r\n}: IEditArgs): Array<string> {\r\n    const args: Array<string> = [];\r\n\r\n    if (typeof startTrim !== 'undefined' && startTrim > 0) {\r\n        const timeStart = secondToHHMMSS(startTrim);\r\n        args.push('-ss', timeStart);\r\n    }\r\n    if (typeof endTrim !== 'undefined' && endTrim > 0) {\r\n        const secondStartTrim = typeof startTrim !== 'undefined' && startTrim > 0 ? startTrim : 0;\r\n        const timeEnd = secondToHHMMSS(endTrim - secondStartTrim);\r\n        args.push('-t', timeEnd);\r\n    }\r\n\r\n    if (audioAction === 'add') args.push('-map', '0', '-map', '1:a');\r\n    else if (audioAction === 'remove') args.push('-an');\r\n\r\n    args.push('-c', 'copy');\r\n\r\n    return args;\r\n}\r\n\r\nexport function mergeArgs(): Array<string> {\r\n    return [\r\n        '-i',\r\n        'srcVideo',\r\n        '-i',\r\n        'srcAudio',\r\n        '-map',\r\n        '0',\r\n        '-map',\r\n        '1:a',\r\n        '-c:v',\r\n        'copy',\r\n    ];\r\n}\r\n","import React, { memo, useState, useEffect } from 'react';\r\nimport moment from 'moment';\r\n\r\nimport './App.css';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Box, Button } from '@material-ui/core';\r\nimport { LocalGroceryStoreTwoTone } from '@material-ui/icons';\r\nimport LocalMoviesIcon from '@material-ui/icons/LocalMovies';\r\n\r\nimport { initFFMPEG, mergeVideo, ILogMessage, setLog } from './core/ffmpeg';\r\nimport { editArgs, mergeArgs } from './utils/videoHandle';\r\n\r\nexport interface IProps {\r\n    setCenterMessage: (message: string) => void;\r\n    srcVideo?: string;\r\n    srcAudio?: string;\r\n\r\n    merge: boolean;\r\n\r\n    audioAction: 'add' | 'remove' | 'get' | 'none';\r\n\r\n    startTrim?: number;\r\n    endTrim?: number;\r\n\r\n    triggerChangeVideo: (videoData: Uint8Array) => void;\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    renderBox: {\r\n        maxHeight: 250,\r\n        overflowY: 'auto',\r\n        borderBottom: '1px solid #f44336',\r\n        '& ul': {\r\n            color: '#949494',\r\n            listStyleType: 'none',\r\n        },\r\n    },\r\n});\r\n\r\nexport default memo(function Render({\r\n    srcVideo,\r\n    srcAudio,\r\n    merge,\r\n    audioAction,\r\n    startTrim,\r\n    endTrim,\r\n    triggerChangeVideo,\r\n    setCenterMessage\r\n}: IProps) {\r\n    const classes = useStyles();\r\n    const [trueLog, setTrueLogs] = useState<Array<string>>([]);\r\n    const [log, setLog] = useState<string>('');\r\n    const [isRender, setRender] = useState<boolean>(false)\r\n\r\n    const writeLogFn = (message: ILogMessage) => {\r\n        setLog(\r\n            `- [${moment().format('LTS')}] ${message.type}: ${message.message}`\r\n        );\r\n    };\r\n\r\n    // Check is merge\r\n    useEffect(() => {\r\n        if (merge) {\r\n            handleRenderBtn();\r\n        }\r\n    }, [merge]);\r\n\r\n    // Check for logs change\r\n    useEffect(() => {\r\n        setTrueLogs([log, ...trueLog]);\r\n    }, [log]);\r\n\r\n    // Start render\r\n    const handleRenderBtn = async () => {\r\n        setRender(true);\r\n        setCenterMessage('Rendering video, scroll down to see the log...');\r\n        writeLogFn({\r\n            type: 'INFO',\r\n            message: 'Loading ffmpeg...',\r\n        });\r\n\r\n        // Init  MPEG\r\n        const loaded = await initFFMPEG(writeLogFn).catch((err) => {\r\n            return null;\r\n        });\r\n        if (loaded !== true) {\r\n            writeLogFn({\r\n                type: 'ERROR',\r\n                message: 'Cannot load ffmpeg',\r\n            });\r\n            setRender(false);\r\n            setCenterMessage('Cannot load ffmpeg core, scroll down to see the log output the error....');\r\n            return;\r\n        }\r\n\r\n        let args: Array<string> = [];\r\n\r\n        if (merge) {\r\n            args = mergeArgs();\r\n        } else {\r\n            const inputArgs: Array<string> = [];\r\n            if (typeof srcVideo !== 'undefined') inputArgs.push('-i', 'srcVideo');\r\n            if (typeof srcAudio !== 'undefined')\r\n                inputArgs.push('-i', 'srcAudio');\r\n            const editArguments: Array<string> = editArgs({\r\n                audioAction,\r\n                startTrim,\r\n                endTrim,\r\n            });\r\n            args = [...inputArgs, ...editArguments];\r\n        }\r\n\r\n        // Start convert video\r\n        const videoData = await mergeVideo(\r\n            srcVideo as string,\r\n            srcAudio as string,\r\n            args\r\n        ).catch((err) => {\r\n            return null;\r\n        });\r\n        if (videoData === null) {\r\n            writeLogFn({\r\n                type: 'ERROR',\r\n                message: 'Cannot convert video!!!',\r\n            });\r\n            setRender(false);\r\n            setCenterMessage('Error while convert video, scroll down to see the log output the error....');\r\n            return;\r\n        }\r\n        writeLogFn({\r\n            type: 'RESULT',\r\n            message: 'Convert Video Success, You Can Now Preview Your Video And Start Download!',\r\n        });\r\n        setRender(false);\r\n        setCenterMessage('Convert video success, click play video below to preview and start download by pressing the button!');\r\n        triggerChangeVideo(videoData);\r\n    };\r\n\r\n    return (\r\n        <Grid item xs={12}>\r\n            <Box m={3} display='flex' justifyContent='center'>\r\n                <Box className={classes.renderBox} display='div'>\r\n                    <ul>\r\n                        {trueLog.map((log, i) => (\r\n                            <li key={i}>{log}</li>\r\n                        ))}\r\n                    </ul>\r\n                </Box>\r\n            </Box>\r\n\r\n            <Box m={3} display='flex' justifyContent='center'>\r\n                <Button disabled={isRender} variant=\"contained\" color=\"primary\" onClick={handleRenderBtn}>Render</Button>\r\n            </Box>\r\n        </Grid>\r\n    );\r\n});\r\n","import React, { Component} from 'react';\r\nimport { FacebookProvider, Comments } from 'react-facebook';\r\n \r\nexport default class Example extends Component {\r\n  render() {\r\n    return (\r\n      <FacebookProvider appId=\"243407530453003\">\r\n        <Comments href=\"https://dim0147.github.io/dyl-editor\" />\r\n      </FacebookProvider>\r\n    );\r\n  }\r\n}","import React, { memo, useEffect } from 'react';\r\nimport queryString from 'query-string';\r\n\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\n\r\ninterface IProps {\r\n    isDashManifestVideo: boolean;\r\n    setAudioAction: (action: 'add' | 'remove' | 'none') => void;\r\n}\r\n\r\nexport default memo(function AudioAction({ isDashManifestVideo, setAudioAction }: IProps) {\r\n    const [value, setValue] = React.useState<'add' | 'remove' | 'none'>(isDashManifestVideo ? 'add' : 'none');\r\n\r\n    useEffect(() => {\r\n        if(isDashManifestVideo === true){\r\n            setValue('add');\r\n        }else if(isDashManifestVideo === false){\r\n            setValue('none');\r\n        }\r\n    }, [isDashManifestVideo])\r\n\r\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const action = event.target.value as 'add' | 'remove' | 'none';\r\n        setValue(action);\r\n        setAudioAction(action);\r\n    };\r\n\r\n    return (\r\n        <Grid item xs={12}>\r\n            <Box display='flex' justifyContent='center' m={3}>\r\n                <FormControl component='fieldset'>\r\n                    <Box display='flex' justifyContent='center'>\r\n                        <FormLabel component='legend'>Audio</FormLabel>\r\n                    </Box>\r\n                    <RadioGroup\r\n                        row\r\n                        aria-label='action'\r\n                        name='action'\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                    >\r\n                        <FormControlLabel\r\n                            value='add'\r\n                            control={<Radio />}\r\n                            label='Add'\r\n                        />\r\n                        <FormControlLabel\r\n                            value='remove'\r\n                            control={<Radio />}\r\n                            label='Remove'\r\n                        />\r\n                        <FormControlLabel\r\n                            value='none'\r\n                            control={<Radio />}\r\n                            label='None'\r\n                        />\r\n                    </RadioGroup>\r\n                </FormControl>\r\n            </Box>\r\n        </Grid>\r\n    );\r\n});\r\n","import React, { memo } from 'react';\r\nimport MaskedInput from 'react-text-mask';\r\nimport {\r\n    Grid,\r\n    Box,\r\n    Typography,\r\n    InputLabel,\r\n    Input,\r\n    Button,\r\n} from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nimport { hmsToSecondsOnly } from './utils/Time';\r\n\r\ninterface IProps {\r\n    setTrimTime: (startTrim: number, endTrim: number) => void;\r\n}\r\n\r\ninterface TextMaskCustomProps {\r\n    inputRef: (ref: HTMLInputElement | null) => void;\r\n}\r\n\r\nfunction TextMaskCustom(props: TextMaskCustomProps) {\r\n    const { inputRef, ...other } = props;\r\n\r\n    return (\r\n        <MaskedInput\r\n            {...other}\r\n            ref={(ref: any) => {\r\n                inputRef(ref ? ref.inputElement : null);\r\n            }}\r\n            mask={[\r\n                /[0-9]/,\r\n                /[0-9]/,\r\n                ':',\r\n                // ' ',\r\n                /[0-9]/,\r\n                /[0-9]/,\r\n                ':',\r\n                // ' ',\r\n                /[0-9]/,\r\n                /[0-9]/,\r\n            ]}\r\n            placeholderChar={'\\u2000'}\r\n            showMask\r\n        />\r\n    );\r\n}\r\n\r\nexport default memo(function VideoAction({ setTrimTime }: IProps) {\r\n    const [startLength, setStartLength] = React.useState<string>('00:00:00');\r\n    const [endLength, setEndLength] = React.useState<string>('00:00:00');\r\n    const [error, setError] = React.useState<string>('');\r\n\r\n    const handleChangeStartLength = (\r\n        event: React.ChangeEvent<HTMLInputElement>\r\n    ) => {\r\n        setStartLength(event.target.value);\r\n    };\r\n\r\n    const handleChangeEndLength = (\r\n        event: React.ChangeEvent<HTMLInputElement>\r\n    ) => {\r\n        setEndLength(event.target.value);\r\n    };\r\n\r\n    const handleApplyBtn = () => {\r\n        // Invalid input\r\n        if (\r\n            startLength !== '00:00:00' &&\r\n            hmsToSecondsOnly(startLength) === null\r\n        ) {\r\n            return setError('Invalid start time!!!');\r\n        }\r\n        if (endLength !== '00:00:00' && hmsToSecondsOnly(endLength) === null) {\r\n            return setError('Invalid end time!!!');\r\n        }\r\n\r\n        const secondStartTime = hmsToSecondsOnly(startLength);\r\n        const secondEndTime = hmsToSecondsOnly(endLength);\r\n\r\n        // Invalid start time and end time\r\n        if (\r\n            secondStartTime !== null &&\r\n            secondEndTime !== null &&\r\n            secondStartTime > 0 &&\r\n            secondEndTime > 0 &&\r\n            secondStartTime >= secondEndTime\r\n        ) {\r\n            return setError('Invalid second start time and end time');\r\n        }\r\n\r\n        setError('');\r\n        setTrimTime(secondStartTime as number, secondEndTime as number);\r\n    };\r\n\r\n    const handleRemoveBtn = () => {\r\n        setStartLength('00:00:00');\r\n        setEndLength('00:00:00');\r\n        setTrimTime(0, 0);\r\n    }\r\n\r\n    return (\r\n        <Grid item xs={12}>\r\n            <Box display='flex' flexDirection='column' justifyContent='center'>\r\n                <Typography align='center' variant='body2'>\r\n                    Trim\r\n                </Typography>\r\n\r\n                {error !== '' && (\r\n                    <Box display='flex' justifyContent='center' m={1}>\r\n                        <Alert severity='error'>{error}</Alert>\r\n                    </Box>\r\n                )}\r\n\r\n                <Box display='flex' justifyContent='center' m={1}>\r\n                    <InputLabel\r\n                        style={{ margin: 10 }}\r\n                        htmlFor='formatted-text-mask-input'\r\n                    >\r\n                        Start From\r\n                    </InputLabel>\r\n                    <Input\r\n                        value={startLength}\r\n                        onChange={handleChangeStartLength}\r\n                        inputComponent={TextMaskCustom as any}\r\n                    />\r\n                </Box>\r\n\r\n                <Box display='flex' justifyContent='center' m={1}>\r\n                    <InputLabel\r\n                        style={{ margin: 10 }}\r\n                        htmlFor='formatted-text-mask-input'\r\n                    >\r\n                        End At\r\n                    </InputLabel>\r\n                    <Input\r\n                        value={endLength}\r\n                        onChange={handleChangeEndLength}\r\n                        inputComponent={TextMaskCustom as any}\r\n                    />\r\n                </Box>\r\n\r\n                <Box display='flex' justifyContent='center' m={5}>\r\n                    <Button\r\n                        onClick={handleApplyBtn}\r\n                        variant='outlined'\r\n                        color='secondary'\r\n                        style={{margin: 3}}\r\n                    >\r\n                        Apply\r\n                    </Button>\r\n\r\n                    <Button\r\n                        onClick={handleRemoveBtn}\r\n                        variant='outlined'\r\n                        color='primary'\r\n                        style={{margin: 3}}\r\n                    >\r\n                        Remove\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n        </Grid>\r\n    );\r\n});\r\n","import React from 'react';\nimport queryString from 'query-string';\nimport { downloadURI } from './utils/Download';\n\nimport {\n    Container,\n    Grid,\n    Typography,\n    Button,\n    Box,\n    Chip,\n    TextField,\n} from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\nimport DoneIcon from '@material-ui/icons/Done';\nimport VideoCallIcon from '@material-ui/icons/VideoCall';\n\nimport Header from './Header';\n\nimport Video from './Video';\nimport Render from './Render';\n\nimport Comment from './Comment';\n\nimport AudioAction from './AudioAction';\nimport VideoAction from './VideoAction';\n\ninterface IQueryParameter {\n    srcAudio?: string;\n    srcVideo?: string;\n    merge?: boolean;\n    isDashManifestVideo: boolean;\n}\n\ninterface IState {\n    centerMessage: string;\n\n    srcVideo?: string;\n    srcAudio?: string;\n    isDashManifestVideo: boolean;\n\n    merge: boolean;\n\n    currentTimeVideo?: any;\n\n    audioAction: 'add' | 'remove' | 'none';\n    startTrim?: number;\n    endTrim?: number;\n\n    srcVideoPreview?: string;\n    videoOutput: Uint8Array | null;\n}\n\nexport default class App extends React.Component<{}, IState> {\n    public player: any = null;\n\n    private outputFileRef: any = React.createRef();\n\n    state: Readonly<IState> = {\n        centerMessage: '',\n        merge: false,\n        isDashManifestVideo: false,\n        audioAction: 'none',\n        videoOutput: null,\n    };\n\n    componentDidMount() {\n        const parsed: any = queryString.parse((window as any).location.search);\n        let newState: any = {};\n        if (typeof (parsed as IQueryParameter).srcVideo !== undefined) {\n            newState['srcVideo'] = parsed.srcVideo;\n        }\n        if (typeof (parsed as IQueryParameter).srcAudio !== undefined) {\n            newState['srcAudio'] = parsed.srcAudio;\n        }\n        if (typeof parsed.isDashManifestVideo !== undefined) {\n            newState['isDashManifestVideo'] =\n                parsed.isDashManifestVideo === 'true' ? true : false;\n        }\n        if (typeof (parsed as IQueryParameter).merge !== undefined) {\n            newState['merge'] = parsed.merge;\n        }\n\n        this.setState(newState);\n    }\n\n    setCenterMessage = (message: string) => {\n        this.setState({ centerMessage: message });\n    };\n\n    handleVideoStateChange = (state: any) => {\n        if (this.player === null) return;\n        const currentTime: number = state.currentTime as number;\n        const { startTrim, endTrim } = this.state;\n        if (\n            typeof startTrim !== 'undefined' &&\n            startTrim > 0 &&\n            currentTime < startTrim\n        ) {\n            this.player.seek(startTrim);\n            return;\n        }\n        if (\n            typeof endTrim !== 'undefined' &&\n            endTrim > 0 &&\n            currentTime > endTrim\n        ) {\n            this.player.seek(startTrim);\n            return;\n        }\n    };\n\n    restartPlayer = () => {\n        this.setMuted(false);\n        this.setTrimTime(0, 0);\n    };\n\n    setMuted = (muted: boolean) => {\n        if (this.player !== null) {\n            this.player.muted = muted;\n        }\n    };\n\n    setAudioAction = (action: 'add' | 'remove' | 'none') => {\n        if (action === 'remove') {\n            this.player.muted = true;\n        } else if (action === 'add') {\n            this.player.muted = false;\n        } else if (action === 'none') {\n            this.player.muted = false;\n        }\n        this.setState({ audioAction: action });\n    };\n\n    setTrimTime = (startTrim: number, endTrim: number) => {\n        this.setState({\n            startTrim,\n            endTrim,\n        });\n    };\n\n    // Ref player react library\n    setPlayer = (player: any) => {\n        this.player = player;\n        if (this.player !== null) {\n            this.player.subscribeToStateChange(this.handleVideoStateChange);\n        }\n    };\n\n    // When convert success\n    triggerChangeVideo = (videoData: Uint8Array) => {\n        var srcBlob = URL.createObjectURL(new Blob([videoData.buffer]));\n        this.setState({ srcVideoPreview: srcBlob, videoOutput: videoData });\n        this.restartPlayer();\n    };\n\n    // Choose source video to display\n    playerSourceVideo = (): string | null => {\n        // Priority video preview as first\n        if (typeof this.state.srcVideoPreview !== 'undefined')\n            return this.state.srcVideoPreview as string;\n\n        // Source video second\n        if (typeof this.state.srcVideo !== 'undefined') {\n            return this.state.srcVideo as string;\n        }\n\n        // Source Audio third\n        if (typeof this.state.srcAudio !== 'undefined') {\n            return this.state.srcAudio as string;\n        }\n\n        return null;\n    };\n\n    displayTrimStatus = () => {\n        if (\n            (typeof this.state.startTrim !== 'undefined' &&\n                this.state.startTrim > 0) ||\n            (typeof this.state.endTrim !== 'undefined' &&\n                this.state.endTrim > 0)\n        )\n            return (\n                <Grid item>\n                    <Chip\n                        size='small'\n                        icon={<DoneIcon />}\n                        label='Apply trim video'\n                        clickable={false}\n                        color='secondary'\n                    />\n                </Grid>\n            );\n    };\n\n    handleUploadFile = async (event: React.ChangeEvent<HTMLInputElement>) => {\n        const files = event.target.files;\n        if (files === null || files.length > 1) return;\n\n        const file = files.item(0);\n        const url = URL.createObjectURL(file);\n        this.setState({ srcVideo: url });\n    };\n\n    downloadVideo = () => {\n        let outputFileName = this.outputFileRef.current.value as string;\n        if (outputFileName === '') outputFileName = 'Video-DYL';\n        downloadURI(\n            this.state.videoOutput as Uint8Array,\n            outputFileName + '.mp4',\n            'application/octet-stream'\n        );\n    };\n\n    render() {\n        return (\n            <Container>\n                <Grid container justify='center'>\n                    <Header />\n\n                    {/* Alert 2GB Maximum */}\n                    <Grid item xs={12}>\n                        <Box m={2} display='flex' justifyContent='center'>\n                            <Alert severity='warning'>\n                                - Currently can handle video maximum 2 GB (1\n                                hour video and below), video have more than one\n                                hour scroll down the webpage to read the\n                                comment!\n                                <br />- Hiện tại có thể xử lý video tối đa 2 GB\n                                (video 1 giờ trở xuống), video có hơn một giờ\n                                cuộn xuống trang web để đọc bình luận!\n                            </Alert>\n                        </Box>\n                    </Grid>\n\n                    {/* Info */}\n                    {this.state.centerMessage.length > 0 && (\n                        <Grid item xs={12}>\n                            <Box m={2} display='flex' justifyContent='center'>\n                                <Alert severity='info'>\n                                    {this.state.centerMessage}\n                                </Alert>\n                            </Box>\n                        </Grid>\n                    )}\n\n                    {/* Preview video */}\n                    {this.state.videoOutput !== null && (\n                        <Grid item xs={12}>\n                            <Box m={2}>\n                                <Typography\n                                    color='secondary'\n                                    align='center'\n                                    display='block'\n                                    variant='subtitle1'\n                                >\n                                    Preview Your Video\n                                </Typography>\n                            </Box>\n                        </Grid>\n                    )}\n\n                    {/* No video or audio file asking add file */}\n                    {typeof this.state.srcVideo === 'undefined' &&\n                        typeof this.state.srcAudio === 'undefined' && (\n                            <Grid item xs={12}>\n                                <Box\n                                    m={2}\n                                    display='flex'\n                                    justifyContent='center'\n                                >\n                                    <Button\n                                        variant='contained'\n                                        component='label'\n                                        color='primary'\n                                        startIcon={<VideoCallIcon />}\n                                    >\n                                        Upload Media\n                                        <input\n                                            type='file'\n                                            hidden\n                                            onChange={this.handleUploadFile}\n                                        />\n                                    </Button>\n                                </Box>\n                            </Grid>\n                        )}\n\n                    {this.playerSourceVideo() !== null && (\n                        <Video\n                            refFn={this.setPlayer}\n                            src={this.playerSourceVideo() as string}\n                        />\n                    )}\n\n                    {this.state.videoOutput !== null && (\n                        <Grid item>\n                            <Box display='flex' justifyContent='center' m={2}>\n                                <TextField\n                                    inputRef={this.outputFileRef}\n                                    label='Name File'\n                                    defaultValue='Video-DYL'\n                                    placeholder='Enter Your File Name'\n                                    required\n                                />\n                            </Box>\n                            <Box display='flex' justifyContent='center' m={3}>\n                                <Button\n                                    startIcon={<CloudDownloadIcon />}\n                                    variant='contained'\n                                    color='secondary'\n                                    onClick={this.downloadVideo}\n                                >\n                                    Download\n                                </Button>\n                            </Box>\n                        </Grid>\n                    )}\n                    <AudioAction\n                        isDashManifestVideo={this.state.isDashManifestVideo}\n                        setAudioAction={this.setAudioAction}\n                    />\n                    <VideoAction setTrimTime={this.setTrimTime} />\n\n                    {this.displayTrimStatus()}\n\n                    <Render\n                        setCenterMessage={this.setCenterMessage}\n                        merge={this.state.merge}\n                        srcVideo={this.state.srcVideo}\n                        srcAudio={this.state.srcAudio}\n                        audioAction={this.state.audioAction}\n                        startTrim={this.state.startTrim}\n                        endTrim={this.state.endTrim}\n                        triggerChangeVideo={this.triggerChangeVideo}\n                    />\n\n                    <Grid item>\n                        <Box display='flex' justifyContent='center'>\n                            <Comment />\n                        </Box>\n                    </Grid>\n                </Grid>\n            </Container>\n        );\n    }\n}\n","import React from 'react';\r\nimport ReactGA from 'react-ga';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nfunction initGA(): void {\r\n    const gaId = process.env.REACT_APP_GOOGLE_ANALYTIC_ID;\r\n    if (typeof gaId !== 'undefined') {\r\n        ReactGA.initialize(gaId);\r\n        ReactGA.pageview(window.location.pathname + window.location.search);\r\n    }\r\n}\r\n\r\ninitGA();\r\n\r\nexport default class Application extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className='application'>\r\n                <Helmet>\r\n                    <title>DYL Editor</title>\r\n                    <meta\r\n                        name='title'\r\n                        content='DYL Editor - Edit Video And Audio'\r\n                    />\r\n                    <meta\r\n                        name='description'\r\n                        content='DYL Editor is a photo and video editing website under DYL Download Facebook Video Extension'\r\n                    />\r\n                </Helmet>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport Application from './Application';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Application />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}